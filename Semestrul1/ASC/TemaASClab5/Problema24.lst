     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0201FD00                    A db 2, 1, -3, 0
    14                                      L1 EQU $-A
    15 00000004 040507060201                B db 4, 5, 7, 6, 2, 1
    16                                      L2 EQU $-B
    17 0000000A 00<rept>                    R times L1+L2 db 0
    18                                      ;R: 1, 2, 6, 7, 5, 4, 0, -3, 1, 2
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 B906000000                      mov ECX, L2         ; L2 = 6
    23 00000005 BF00000000                      mov EDI, 0          ;EDI = 0
    24 0000000A E30F                            jecxz final1        
    25                                          repeta:
    26 0000000C 8A81[03000000]                      mov Al, [B+ECX-1]
    27 00000012 8887[0A000000]                      mov [R+EDI], Al
    28 00000018 47                                  inc EDI
    29 00000019 E2F1                            loop repeta
    30                                          final1:
    31                                          ; A doua instructiune LOOP pentru sirul A
    32 0000001B B904000000                      mov ECX, L1
    33 00000020 E30F                            jecxz final2
    34                                          repeta2:
    35 00000022 8A81[FFFFFFFF]                      mov AL, [A+ECX-1]
    36 00000028 8887[0A000000]                      mov [R+EDI], AL
    37 0000002E 47                                  inc EDI
    38 0000002F E2F1                            loop repeta2
    39                                          final2:
    40                                      
    41                                          ; exit(0)
    42 00000031 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 00000033 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
