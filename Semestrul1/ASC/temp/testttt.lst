     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 99FFFFFF[28000000]          a1 dd -103, a6
    15 00000008 000007000300030007-         a2 dw 1&2, 3|4,5^6,1|2,3^4,5&6
    15 00000011 000400             
    16 00000014 030000000700                   dw 1^2, 3&4, 5|6
    17 0000001A 1A00E6FF                    a3 dw $-$$, $$-a3
    18 0000001E BBBB                        a4 db ~((-1)^0bbh), 110bbh
    18          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    19 00000020 0000008001000000            a5 dd -129<<1Fh, 81h>>0111b
    19          ******************       warning: dword data exceeds bounds [-w+number-overflow]
    20 00000028 613161326133613461-         a6 dd 'a1a2a3a4a5', (a6-a5)<<(a5-a4)
    20 00000031 35000020000000     
    21 00000038 [0800][0900]<rept>          a7 times 4 dw a2, a2+1
    22                                      ;a8 dw !(a2-a1),!(a2-1)
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27                                      
    28                                          ; exit(0)
    29 00000000 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    30 00000002 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
