     1                                  bits 32 
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf
     6                                  
     7                                  %include "ceva.asm"
     1                              <1> bits 32
     2                              <1> 
     3                              <1> global modul        
     4                              <1> 
     5                              <1>     modul:
     6                              <1>         
     7 00000000 BB00000000          <1>         mov ebx, 0
     8 00000005 BA00000000          <1>         mov edx, 0
     9 0000000A B908000000          <1>         mov ecx, 8
    10                              <1>         repeta:
    11 0000000F 88C3                <1>             mov bl, al
    12 00000011 C0E304              <1>             shl bl, 4
    13 00000014 C0EB04              <1>             shr bl, 4
    14 00000017 00DA                <1>             add dl, bl
    15 00000019 C1E804              <1>             shr eax, 4
    16 0000001C E2F1                <1>         loop repeta
    17                              <1>         ;edx rezultat
    18 0000001E C3                  <1>     ret
     8                                  
     9                                  import exit msvcrt.dll  
    10                                  import printf msvcrt.dll  
    11                                     
    12                                  segment data use32 class=data public
    13 0000001F 78563412FFFFFFFF22-           sir dd 0x12345678,-1, 25634, 28252h, 24252o, 01010100y, 23o
    13 00000028 64000052820200AA28-
    13 00000031 000054000000130000-
    13 0000003A 00                 
    14                                        lungime equ ($-sir)/4
    15 0000003B 00000000                      suma dd 0
    16 0000003F 2564202000                    format db "%d  ", 0
    17 00000044 00000000<rept>                d times 100 dd 0
    18                                  segment code use32 class=code public
    19                                      start:
    20 00000000 BE[1F000000]                    mov esi, sir
    21 00000005 BF[44000000]                    mov edi, d
    22 0000000A B800000000                      mov eax, 0
    23 0000000F BA07000000                      mov edx, lungime
    24                                          repet1:
    25                                              
    26 00000014 AD                                  lodsd
    27 00000015 60                                  pushad
    28 00000016 E8(00000000)                        call modul
    29                                              ;rezultat in edx
    30                                              
    31 0000001B 8915[3B000000]                      mov dword [suma], edx
    32                                              
    33 00000021 61                                  popad
    34 00000022 60                                  pushad
    35                                              
    36 00000023 FF35[3B000000]                      push dword [suma]
    37 00000029 68[3F000000]                        push dword format
    38 0000002E FF15[00000000]                      call [printf] 
    39 00000034 83C408                              add esp, 4*2
    40                                              
    41 00000037 61                                  popad
    42 00000038 C705[3B000000]0000-                 mov dword[suma], 0
    42 00000040 0000               
    43                                              
    44 00000042 4A                              dec edx
    45 00000043 83FA00                          cmp edx, 0
    46 00000046 75CC                            jne repet1
    47                                          
    48                                          
    49                                          
    50                                          
    51 00000048 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 0000004A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
